service: too-good-to-notify
frameworkVersion: "2"
useDotenv: true
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage}
  region: eu-west-1
  role: arn:aws:iam::104887580826:role/lambda-tgtg-notifier-role # Put here the ARN to a role that allows at least SNS publish and dynamoDB read/write
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    API_ITEMS_ROUTE: item/v7/
    API_LOGIN_ROUTE: auth/v1/loginByEmail
    API_URL: https://apptoogoodtogo.com/api/
    LOGIN_SECRET_TAG: "${self:provider.stage}/tgtg/login"
    DYNAMODB_CONSUMERS_TABLE: "tgtg-consumers-table-${self:provider.stage}"
    SNS_TOPIC_NOTIFY_CONSUMERS: "arn:aws:sns:eu-west-1:104887580826:tgtg-notify-consumers-topic-${self:provider.stage}"

plugins:
  - serverless-plugin-optimize
  - serverless-offline

functions:
  notifyConsumersBatch:
    handler: functions/script.handler
    memorySize: 128
    timeout: 15
    events:
      - schedule: rate(1 minute)
      - http:
          path: consumers/notify
          method: get

resources:
  Resources:
    tgtgConsumersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "tgtg-cconsumers-table-${self:provider.stage}"
        AttributeDefinitions:
          - AttributeName: contact
            AttributeType: S
        KeySchema:
          - AttributeName: contact
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    notifyConsumersTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: "Notif 2G2G"
        TopicName: "tgtg-notify-consumers-topic-${self:provider.stage}"
